/* 主页index的样式表 */

/* 设置顶部外部容器样式 行高垂直居中*/
.site-topbar{
     background-color: #333;
     line-height: 40px;
}
/* 设置内部容器样式 高度撑开*/
.container{
    height: 40px;
}


                    /* 导航栏左侧样式 */
/* 左侧内容浮动 */
.site-topbar li{
    float: left;
}
/* 给个相对定位,方便小三角使用绝对定位 */
#app-wrapper{
    position: relative;
}
/* 光标移入时显示小三角 */
#app-wrapper:hover > .app::after{
    content: "";
    /* 绝对定位+水平居中 9等式 */
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    margin: 0 auto;
    /* 内容区为0,直接设置边框 */
    width: 0;
    height: 0;
    /* 保留左下右的边框,不需要上边框.将左右边框设置为透明,单独设置下边框为白色,达到小三角的效果 */
    border: 8px solid transparent;
    border-top: none;
    border-bottom-color:white;
}
/* 下载APP的下拉 */
.app .qrcode{
    /* 不应该在父元素内占据位置,应使其脱离文档流.给个绝对定位,往左移40px达到居中效果 */
    position: absolute;
    left: -40px;
    /* 整个框的大小 */
    width: 124px;
    /* 在这不指定height: 148px; 光标移入后再更改高度*/
    /* 指定一个小行高,避免span中的字下移 */
    line-height: 1;
    /* 注意text-align对图片无效,在这只是为了让字居中对齐; */
    text-align: center;
    box-shadow: 0 0 10px rgba(0, 0, 0, .3);
    /* 默认隐藏二维码区域 */
    /* display: none; */
    /* 还可以使用高度变为0的方式来隐藏元素 */
    height: 0;
    overflow: hidden;
    /* 不使用display:block的方式,采取一个过渡效果 */
    /* 高度更改至148px需要花费3s */
    transition: height 1s;
    /* 这个地方要注意，如果不设置背景颜色（视作透明），就算提升层级，但是下面的字仍然会透过来 */
    background-color: #fff;
    z-index: 1000;
}
/* 光标移入时才显示二维码区域 */
#app-wrapper:hover > .app .qrcode{
    /* display: block; */
    height: 148px;
}
/* 二维码图片 */
.app .qrcode img{
    width: 90px;
    /* 因为父元素.qrcode里的text-align对图片无效,再此需要设置外边距来使其居中 */
    margin: 17px 17px 10px 17px;
}
/* 设置二维码中字体大小,并且防止字体hover变白 */
.app span{
    color: #000;
    font-size: 14px;
}


                    /* 导航栏右侧样式 */
/* 右侧浮动 */
.shop-cart , .user-info{
    float: right;
}
/* 内容字体样式,整个区域都能点击 */
.container a{
    font-size: 12px;
    color: #b0b0b0;
    display: block;
}
/* 设置超链接移入效果 */
.container a:hover{
    color: #fff;
}
/* 购物车区块 */
/* 设置左外边距,相对定位辅助购物车列表绝对定位 */
.shop-cart{
    margin-left: 26px;
    position: relative;
}
/* 链接样式 */
.shop-cart a{
    text-align: center;
    background-color: #424242;
    width: 120px;
}
/* 购物车图标与字的间隙 */
.shop-cart i{
    margin-right: 2px;
}
/* 光标移入效果 */
.shop-cart:hover a{
    background-color: #fff;
    color: #ff6700;
}
/* 购物车列表 */
.shop-cart .shop-list{
    /* 绝对定位,右边边框与上方重合位置 */
    position: absolute;
    left: -196px;

    width: 316px;
    /* height: 80px; */
    box-shadow: 0 8px 10px rgba(0, 0, 0, .3);
    
    text-align: center;
    line-height: 80px;

    /* display: none; */
    height: 0;
    overflow: hidden;
    transition: height 1s;
    /* 设置背景颜色，不让下方的搜索框透过 */
    background-color: #fff;
    z-index: 1000;
}
/* 光标移入后显示购物车列表 */
.shop-cart:hover .shop-list{
    /* display: block; */
    height:80px
}


                    /* 头部 */
/* 设置中间header */
.site-header{
    position: relative;
}
.header{
    height: 100px;
}
.header .logo{
    float: left;
    margin: 22.5px 0;
    /* 固定宽高 */
    width: 55px;
    height: 55px;
    /* 辅助绝对定位 */
    position: relative;
    /* 为了达到图片滚动效果,在左边也摆了张图片,但是不能让它直接显示 */
    overflow: hidden;
}
/* 设置超链接的背景 */
.header .logo a{
    /* 固定宽高 */
    width: 55px;
    height: 55px;

    background-color: #ff6700;
    background-position: center;
    /* 不使用display: block; 而是直接使用定位*/
    position: absolute;
    /* 切换图片的过渡效果 */
    transition: left 1s;
    /* 要注意,这里一定要设置一个看上去没什么用的left.
    因为不设置就为auto,而auto浏览器是无法计算的.必须要指定,否则过渡会变得奇怪 */
    left: 0;
}
/* 设置默认显示的背景图片 */
.header .logo .mi{
    background-image: url(../img/mi-logo.png);
}
/* 设置第二张图片,放在默认图片左侧.由于hidden,所以不会直接显示 */
.header .logo .home{
    left: -55px;
    background-image: url(../img/mi-home.png);
}
/* 在光标移入时,默认图片向右移动.由于hidden,会看不见 */
.header .logo:hover .mi {
    left: 55px;
}
/* 在光标移入时,第二张图片应显示出来. */
.header .logo:hover .home{
    left: 0;
}
/* 中部导航条 */
.nav-wrapper{
    float: left;
    /* 容器与左边图片的距离 */
    margin-left: 7px;
}
/* 固定导航条宽高，并设置好行高居中 */
.nav-wrapper .nav{
    width: 850px;
    height: 100px;
    line-height: 100px;
}
/* 将导航项目浮动以横向排列，并设置字号，间距 */
.nav-wrapper .nav > li{
    float: left;
    font-size: 16px;
    /* 这里不使用外边距的原因是因为当光标滑过外边距时，会视作滑出列表。导致弹出层回缩 */
    padding-right: 20px;
}

.all-goods-wrapper{
    position: relative;
}
/* 设置左侧导航条的样式 */
.left-menu{
    height: 420px;
    width: 234px;
    padding: 20px 0;
    background-color: rgba(0, 0, 0, .6);

    position: absolute;
    left: -120px;
    z-index: 50;

}
.left-menu a{
    display: block;
    height: 42px;
    line-height: 42px;
    color: white !important;
    padding: 0 30px;
}
.left-menu a i{
    float: right;
    line-height: 42px;
}
.left-menu a:hover{
    background-color: #ff6700;
}

/* 隐藏第一个 */
/* 这里我直接把整个 li 都隐藏了，相比于把内部超链接隐藏，这样可以不用再设置 “光标滑过第一个元素时不弹出弹出层 ” */
.nav-wrapper .nav > li:first-child{
    margin-left: 58px;
    /* 不使用 display: none; 会导致右侧左移,所以应该选择一种会占据位置的隐藏样式 */
    /* visibility: hidden; */
}
/* 很奇怪，居然要再一次设置超链接字体颜色，否则浏览器默认样式表会工作。不知道为什么 */
.nav-wrapper .nav > li a{
    color: #333;
}
/* 光标滑过导航条时的颜色更改 */
.nav-wrapper .nav > li:hover > a{
    color: #ff6700;
}

/* 弹出层 */
.nav .goods-info{
    /* height: 228px; */
    height: 0;
    /* 弹出层的宽度是占满整个屏幕的，所以这里应该使用100%相对site-header宽度 */
    /* 宽度是参考包含块确定的.这个元素的包含块是site-header */
    /* 包含块:离得最近的开启定位的祖先元素 */
    width: 100%;
    
    position: absolute;
    /* 相对于site-header下移100px */
    top: 100px;
    left: 0;
        /* 这里有个麻烦点，想要实现过渡效果，不能在这里直接指定阴影及边框样式。 */
    /* border-top: 1px solid rgb(224, 224, 224);
    box-shadow: 0 5px 3px rgba(0, 0, 0, .2); */

    /* 过渡效果设置 */
    overflow: hidden;
    transition: height 1s;

    /* 设置背景颜色，不让下面的元素透过来显示，提升层级 */
    background-color: #fff;
    z-index: 1000;
}
/* 使用复杂的伪类会导致可读性很差 */
/* 使导航条的第一个与最后两个不会触发弹出层
   使导航条与弹出层产生关系。当光标滑过导航条，对弹出层产生高度改变效果
   并且还让光标对弹出层也能产生高度改变效果，保持弹出层的弹出状态 */
.nav li:not(li:nth-of-type(1n+9)):not(li:first-child):hover ~ .goods-info , 
.goods-info:hover{
    height: 228px;
    border-top: 1px solid rgb(224, 224, 224);
    box-shadow: 0 5px 3px rgba(0, 0, 0, .2);
}

/* 搜索框 */
/* 整体向右浮动，固定宽高，设置上外边距 */
.search-wrapper{
    float: right;

    width: 296px;
    height: 50px;
    margin-top: 25px;
}
/* 搜索框的样式 */
.search-wrapper .search-inp{
    /* 这里让它浮动的原因是不让 html 中的换行产生间隙 */
    float: left;

    padding: 0 10px;
    height: 50px;
    /* 296-52 */
    width: 244px;
    /* 消除默认边框样式 */
    /* border: none; */
    border: 1px solid rgb(224, 224, 224);
    /* 改变 height，width 的效果 */
    box-sizing: border-box;

    font-size: 16px;
    font-family: "Heiti SC";
    /* 将默认轮廓移除 */
    outline: none;
}
/* 搜索按钮样式 */
.search-wrapper .search-btn{
    float: left;

    width: 52px;
    height: 50px;
    
    padding: 0;

    /* border: none; */
    border: 1px solid rgb(224, 224, 224);
    border-left: none;

    background-color: #fff;
    color: #616161;
    font-size: 16px;
}

/* 相邻兄弟选择器只能选择后面的元素 ，要想前面的元素也选中必须使用两个选择器 */
.search-inp:focus ,
.search-inp:focus + button{
    border-color: #ff6700;
}
.search-btn:hover{
    background-color: #ff6700;
    color: #fff;
    border: none;
}


                    /* 中部 */
/* 轮播图容器 */
.banner{
    position: relative;
    /* 内容已经脱离文档流,使用内容撑开高度会导致高度塌陷. */
    height: 460px;
}
/* 使用绝对定位让轮播图堆叠 */
.banner .img-list li{
    position: absolute;
}
/* 设置宽度不让图片溢出 */
.banner .img-list img{
    width: 100%;
    /* 防止基线对齐 */
    vertical-align: top;
}
/* 设置图片右下角小点点位置 */
.pointer{
    position: absolute;
    bottom: 22px;
    right:35px;
}
/* 小点点样式 */
.pointer a{
    float: right;

    width: 8px;
    height: 8px;
    margin-left: 6px;
    background-color: rgba(0, 0, 0, .4);
    border: 2px rgba(255, 255, 255, .4) solid;
    border-radius: 50%;
}
/* 光标滑过的样式. */
.pointer a:hover ,
.pointer a.active{
    background-color:rgba(255, 255, 255, .4);
    border-color: rgba(0, 0, 0, .4);
}

/* 图片两侧的切换按钮 */
.prev-next a{
    width: 41px;
    height: 69px;
    position: absolute;
/* 垂直居中 */
    top: 0;
    bottom: 0;
    margin: auto 0;
/* 引入雪碧图作为背景 */
    background-image: url(../img/icon-slides.png);
}
/* 对雪碧图内的图片位置进行调整 */
.prev-next .prev{
    left: 234px;

    background-position: -84px 0;
}
.prev-next .next{
    right: 0;
    background-position: -125px 0;
}
/* 光标滑过时切换雪碧图显示的位置 */
.prev-next .prev:hover{
    background-position: 0 0;
}
.prev-next .next:hover{
    background-position: -42px 0;
}


                    /* 下部 */
/* 右下角的小工具条 */
.back-top{
    width: 26px;
    height: 206px;
    /* 使用固定定位 */
    position: fixed;
    /* 距离视口底部100px */
    bottom: 100px;
    /* 这里使用到了技巧.
    布局等式 left+margin-left+width+,margin-right+right=视口宽度
    这里先制定了 right 的值为整个视口的 50%
    又由于 left 的值是会随着视口大小改变的（auto），无法直接指定
    如果改变 margin-left 的话，left值则会发生相应改变使等式成立，导致图片原地不动
    所以只能改变 margin-right 的值，则 left 值 +639px 将图片右移 639px 达到效果 */
    right: 50%;
    margin-right: -639px;

    background-color: #bfa;
}
/* 广告区域 */
.ad{
    height: 170px;
    margin-top: 14px;
}
.ad .shortcut ,
.ad .imgs ,
.ad li{
    float:left;
}
/* 左侧快捷方式 */
.ad .shortcut{
    width: 228px;
    height: 168px;
    padding-top: 2px;
    padding-left: 6px;
    margin-right: 14px;
    background-color: #5f5750;
}
.ad .shortcut a{
    color: #cfccca;
    display: block;

    height: 84px;
    width: 76px;
    text-align: center;
    /* 开启 BFC */
    overflow: hidden;
}
.ad .shortcut i{
    display: block;
    /* 会出现外边距折叠问题 */
    margin-top: 20px;
    margin-bottom: 3px;
    font-size: 20px;
}
.ad .shortcut a:hover{
    color: #fff;
}
.ad .shortcut li{
    position: relative;
}
.ad .shortcut li::before{
    content: "";
    position: absolute;

    left: 0;
    right: 0;
    top: 0;
    margin: 0 auto;

    width: 64px;
    height: 1px;
    background-color: #665e57;
}
.ad .shortcut li::after{
    content: "";
    position: absolute;

    top: 0;
    bottom: 0;
    margin: auto 0;
    left: 0;

    width: 1px;
    height: 70px;
    background-color: #665e57;
}
.ad .imgs li{
    width: 316px;
    margin-right: 15px;
}
.ad .imgs li:last-child{
    margin: 0;
}
.ad .imgs img{
    width: 100%;
    vertical-align: top;
}
