// 变量,是一种重复利用的方式,在整个样式表中都可以访问.Sass使用$作为变量的标志
$highlight-color: #f90;
$highlight-border: 1px solid $highlight-color;

$link-color:blue;
a{
    color: $link-color;
}
$left:left;
$top:top;
.rounded{
    border-#{$top}-#{$left}-radius:5px;
}
// 嵌套
nav{
    ul{
        margin: 0;
        padding: 0;
        list-style: none;
    }
    li{
        display: inline-block;
    }
    a{
        display: block;
        padding: 0;
        text-decoration: none;
    }
}
// 父选择器
a{
    font-weight: bold;
    text-decoration:none;
    &:hover{
        text-decoration: none;
    }
    body.firefox & {
        font-weight: normal;
    }
}
// 编译后的 CSS 中 & 将被替换成嵌套外层的父选择器,如果含有多层嵌套,最外层的父选择器逐层向下传递
.main{
    color: black;
    a{
        font-weight: bold;
        &:hover{
            color: red;
        }
    }
}
// & 必须作为选择器的第一个字符,其后可以干缩后缀生成复合的选择器
.main{
    color:black;
    &-sidebar{
        border: 1px solid #000;
    }
}

// 属性嵌套
.funky{
    font: {
        family:fantasy;
        size: 30em;
        weight:bold;
    }
}
// 也可以包含自己的属性值
.funky.error{
    font:20px/26px {
        family:sans-serif;
        weight:normal;
    }
}
// 继承
.error{
    border:1px #f00;
    background-color: #fdd;
}
.seriousError{
    @extend .error;
    border-width: 3px;
}
/* ！保留注释 */

// 插值语句
$version:"1.2.3";
/* This Css version #{$version} */

// 变量以美元符号开头
// 变量支持块级作用域,嵌套规则内定义的变量只能嵌套规则内使用(局部变量),不在嵌套规则内定义的变量则可在任何地方使用(全局变量).将局部变量转换为全局变量可以添加!global声明
.main{
    $width:5em !global;
    width: $width;
}
.sidebar{
    width: $width;
}